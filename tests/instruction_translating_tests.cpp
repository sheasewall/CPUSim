#include <gtest/gtest.h>
#include "translator.h"

#include <map>
#include <bitset>

Translator t;

const std::map<std::string, std::bitset<32>> translationReference{
    { "lui x1, 184880;", 0b00101101001000110000000010110111 },
    { "auipc x2, 111999;", 0b00011011010101111111000100010111 },
    { "jal x3, 333332;", 0b01100001010001010001000111101111 },
    { "jalr x4, 845(x5);", 0b00110100110100101000001001100111 },
    { "beq x6, x7, 1908;", 0b01110110011100110000101001100011 },
    { "bne x8, x9, 288;", 0b00010010100101000001000001100011 },
    { "blt x10, x11, 2918;", 0b00110110101101010100001111100011 },
    { "bge x12, x13, 1998;", 0b01111100110101100101011101100011 },
    { "bltu x14, x15, 2008;", 0b01111100111101110110110001100011 },
    { "bgeu x16, x17, -100;", 0b11111001000110000111111011100011 },
    { "lb x18, 202(x19);", 0b00001100101010011000100100000011 },
    { "lh x20, -286(x21);", 0b11101110001010101001101000000011 },
    { "lw x22, 101(x23);", 0b00000110010110111010101100000011 },
    { "lbu x24, 0(x25);", 0b00000000000011001100110000000011 },
    { "lhu x26, -20(x27);", 0b11111110110011011101110100000011 },
    { "sb x28, -1177(x29);", 0b10110111110011101000001110100011 },
    { "sh x30, 2(x31);", 0b00000001111011111001000100100011 },
    { "sw x1, 303(x2);", 0b00010010000100010010011110100011 },
    { "addi x3, x4, -1909;", 0b10001000101100100000000110010011 },
    { "slti x17, x18, 2047;", 0b01111111111110010010100010010011 },
    { "sltiu x19, x20, -2048;", 0b10000000000010100011100110010011 },
    { "xori x5, x6, 256;", 0b00010000000000110100001010010011 },
    { "ori x7, x8, 100;", 0b00000110010001000110001110010011 },
    { "andi x9, x10, -1;", 0b11111111111101010111010010010011 },
    { "slli x11, x12, 1;", 0b00000000000101100001010110010011 },
    { "srli x13, x14, 5;", 0b00000000010101110101011010010011 },
    { "srai x15, x16, 16;", 0b01000001000010000101011110010011 },
    { "add x18, x17, x0;", 0b00000000000010001000100100110011 },
    { "sub x0, x19, x20;", 0b01000001010010011000000000110011 },
    { "sll x21, x22, x23;", 0b00000001011110110001101010110011 },
    { "slt x26, x25, x24;", 0b00000001100011001010110100110011 },
    { "sltu x27, x0, x29;", 0b00000001110100000011110110110011 },
    { "xor x0, x30, x28;", 0b00000001110011110100000000110011 },
    { "srl x1, x11, x21;", 0b00000001010101011101000010110011 },
    { "sra x2, x20, x0;", 0b01000000000010100101000100110011 },
    { "or x5, x10, x15;", 0b00000000111101010110001010110011 },
    { "and x0, x0, x0;", 0b00000000000000000111000000110011 },
    { "ecall;", 0b00000000000000000000000001110011 },
    { "ebreak;", 0b00000000000100000000000001110011 },
    // { "fence iw, ior;", 0b00001001111000000000000000001111 },
};

TEST(TranslatorTest, TranslateInstrStrings) {
    for (const auto& entry : translationReference) {
        std::cout << entry.first << std::endl;
        EXPECT_EQ(t.translate(entry.first), entry.second) << entry.first;
    }
}

TEST(TranslatorTest, TranslateFile) {
    t.translateFile(std::string(MEMORY_FILES_DIR) + "/test");
}

int main(int argc, char** argv) {
    ::testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}